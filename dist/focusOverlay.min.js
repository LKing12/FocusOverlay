/*! ________________ 
 *   ___  ____/_  __ \
 *   __  /_   _  / / /
 *   _  __/   / /_/ / 
 *   /_/      \____/  
 *   Focus Overlay
 * 
 *  Version: 0.0.1
 *  Author: Maurice Mahan
 *  License: MIT
 *  Repo: https://github.com/MauriceMahan/FocusOverlay
 */
!function(e){"function"==typeof define&&define.amd?define(["jquery"],function(o){return e(o,window)}):"object"==typeof module&&module.exports?module.exports=function(o,t){return void 0===t&&(t="undefined"!=typeof window?require("jquery"):require("jquery")(o)),e(t,window),t}:e(jQuery,window)}(function(e,o){function t(o,t){var n=this;n.active=!1,n.el=o,n.$el=e(o),n.$focusBox=e("<div aria-hidden='true' />"),n.$previousTarget,n.$target,n.timeout=0,n.options=e.extend({},e.fn.focusOverlay.defaults,t),n.onFocusHandler=e.proxy(n.onFocusHandler,n),n.createFocusBox=e.proxy(n.createFocusBox,n),n.onKeyDownHandler=e.proxy(n.onKeyDownHandler,n),n.animateFocusBox=e.proxy(n.animateFocusBox,n),n.cleanup=e.proxy(n.cleanup,n),n.stop=e.proxy(n.stop,n),n.init()}t.prototype={init:function(){var e=this;e.options.alwaysActive?(e.active=!0,o.addEventListener("focus",e.onFocusHandler,!0)):(o.addEventListener("keydown",e.onKeyDownHandler,!1),e.options.inactiveOnClick&&o.addEventListener("click",e.stop,!1)),e.createFocusBox(),e.$el.trigger("foInit",[e])},onKeyDownHandler:function(t){var n=this,i=t.which;e.inArray(i,n.options.triggerKeys)>=0?!1===n.active&&(n.active=!0,o.addEventListener("focus",n.onFocusHandler,!0)):n.options.inactiveOnNonTriggerKey&&n.stop()},createFocusBox:function(){var e=this;e.$focusBox.appendTo(e.$el).attr("id",e.options.id).css({position:"absolute",zIndex:e.options.zIndex,pointerEvents:"none"})},cleanup:function(){var e=this;null!=e.$target&&(e.$previousTarget=e.$target,e.$previousTarget.removeClass(e.options.targetClass))},onFocusHandler:function(o){var t=this,n=e(o.target);if(t.cleanup(),n.data("focus"))t.$target=e(n.data("focus"));else{if(n.data("focus-ignore"))return;t.$target=n}t.$target.addClass(t.options.targetClass),clearTimeout(t.timeout),t.animateFocusBox(t.$target)},stop:function(){var e=this;e.active=!1,o.removeEventListener("focus",e.onFocusHandler,!0),e.cleanup(),e.$focusBox.removeClass(e.options.activeClass)},animateFocusBox:function(e){var o=this;if(e.length){o.$el.trigger("foBeforeDurationTimer",[o,o.$previousTarget,e]);var t=e.outerWidth(),n=e.outerHeight(),i=e.offset().left,a=e.offset().top;o.$focusBox.addClass(o.options.animatingClass).addClass(o.options.activeClass).css({width:t,height:n,left:i,top:a}),o.timeout=setTimeout(function(){o.$focusBox.removeClass(o.options.animatingClass),o.options.inactiveAfterDuration&&o.$focusBox.removeClass(o.options.activeClass),o.$el.trigger("foAfterDurationTimer",[o,o.$previousTarget,e])},o.options.duration)}else o.cleanup()},destroy:function(){var e=this;e.$el.removeData(),o.removeEventListener("focus",e.onFocusHandler,!0),o.removeEventListener("keydown",e.onKeyDownHandler,!1),o.removeEventListener("click",e.stop,!1),o.removeEventListener("focus",e.onFocusHandler,!0)}},e.fn.focusOverlay=function(o){return this.each(function(){e.data(this,"plugin_"+t)||e.data(this,"plugin_"+t,new t(this,o))})},e.fn.focusOverlay.defaults={id:"focus-overlay",activeClass:"focus-overlay-active",animatingClass:"focus-overlay-animating",targetClass:"focus-overlay-target",zIndex:9001,duration:500,inactiveAfterDuration:!1,triggerKeys:[9,36,37,38,39,40,13,32,16,17,18,27],inactiveOnNonTriggerKey:!0,inactiveOnClick:!0,alwaysActive:!1}});